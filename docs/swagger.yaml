basePath: /location/v3/
definitions:
  controllers.mininetApLocationUpdate:
    properties:
      apid:
        type: string
      coordx:
        type: number
      coordy:
        type: number
      coordz:
        type: number
      timestamp:
        type: integer
    type: object
  controllers.mininetUserLocationUpdate:
    properties:
      apname:
        type: string
      coordx:
        type: number
      coordy:
        type: number
      coordz:
        type: number
      timestamp:
        type: integer
      userid:
        type: string
    type: object
  responses.AccessPointInfo:
    properties:
      accessPointId:
        description: Identifier of access point.
        type: string
      connectionType:
        $ref: '#/definitions/responses.ConnectionType'
      interestRealm:
        description: Interest realm of access point.
        type: string
      locationInfo:
        $ref: '#/definitions/responses.LocationInfo'
      numberOfUsers:
        description: Number of users currently on the access point.
        type: integer
      operationStatus:
        $ref: '#/definitions/responses.OperationStatus'
      resourceURL:
        description: Self referring URL
        type: string
      timezone:
        description: Time zone of access point.
        type: string
    type: object
  responses.AccessPointInfoList:
    properties:
      accessPoint:
        description: Collection of the access point information list.
        items:
          $ref: '#/definitions/responses.AccessPointInfo'
        type: array
      resourceURL:
        description: Self referring URL
        type: string
      zoneId:
        description: Identifier of zone
        type: string
    type: object
  responses.AccessPointList:
    properties:
      accessPointList:
        $ref: '#/definitions/responses.AccessPointInfoList'
    type: object
  responses.AnAccessPointInfo:
    properties:
      accessPointInfo:
        $ref: '#/definitions/responses.AccessPointInfo'
    type: object
  responses.ConnectionType:
    enum:
    - LTE
    - Wifi
    - Wimax
    - 5G NR
    - UNKNOWN
    type: string
    x-enum-varnames:
    - CT_LTE
    - CT_WIFI
    - CT_WIMAX
    - CT_NR5G
    - CT_UNKNOWN
  responses.LocationInfo:
    properties:
      altitude:
        description: Location altitude relative to the WGS84 ellipsoid surface.
        type: number
      latitude:
        description: Location latitude, expressed in the range -90째 to +90째. Cardinality
          greater than one only if \"shape\" equals 7.
        items:
          type: number
        type: array
      longitude:
        description: Location longitude, expressed in the range -180째 to +180째. Cardinality
          greater than one only if \"shape\" equals 7.
        items:
          type: number
        type: array
      shape:
        allOf:
        - $ref: '#/definitions/responses.LocationInfoShape'
        description: "Shape information, as detailed in [14], associated with the
          reported location coordinate:\n\t1 = Ellipsoid_Arc\n\t2 = ellipsoid_Point\n\t3
          = ellipsoid_Point_Altitude\n\t4 = ellipsoid_Point_Altitude_Uncert_Ellipsoid\n\t5
          = ellipsoid_Point_Uncert_Circle\n\t6 = ellipsoid_Point_Uncert_Ellipse\n\t7
          = polygon"
    type: object
  responses.LocationInfoShape:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    type: integer
    x-enum-varnames:
    - LocationInfoShapeN1
    - LocationInfoShapeN2
    - LocationInfoShapeN3
    - LocationInfoShapeN4
    - LocationInfoShapeN5
    - LocationInfoShapeN6
    - LocationInfoShapeN7
  responses.OperationStatus:
    enum:
    - Serviceable
    - Unserviceable
    - UNKNOWN
    type: string
    x-enum-varnames:
    - OS_SERVICEABLE
    - OS_UNSERVICEABLE
    - OS_UNKNOWN
  responses.ProblemDetails:
    properties:
      detail:
        description: Type of the problem, typically a URI that identifies the problem
          type
        type: string
      status:
        description: Instance string `json:"instance,omitempty"`
        type: integer
    type: object
  responses.TerminalDistance:
    properties:
      accuracy:
        description: Accuracy Accuracy of the provided distance in meters
        type: integer
      distance:
        description: Distance Distance from terminal to a location or between two
          terminals specified in meters
        type: integer
      timestamp:
        $ref: '#/definitions/responses.TimeStamp'
    type: object
  responses.TimeStamp:
    properties:
      nanoSeconds:
        description: The nanoseconds part of the time.
        type: integer
      seconds:
        description: The seconds part of the time. Time is defined as Unix-time since
          January 1, 1970, 00:00:00 UTC.
        type: integer
    type: object
  responses.UserInfo:
    properties:
      AccessPointId:
        description: AccessPointId The identity of the access point the user is currently
          on, see note 1.
        type: string
      address:
        description: Address Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI)
          currently on the access point, see note 1.
        type: string
      ancillaryInfo:
        description: AncillaryInfo Reserved for future use.
        type: string
      locationInfo:
        allOf:
        - $ref: '#/definitions/responses.LocationInfo'
        description: Location of the User
      resourceURL:
        description: ResourceURL Self-referring URL, see note 1.
        type: string
      timestamp:
        allOf:
        - $ref: '#/definitions/responses.TimeStamp'
        description: Date and time that location was collected.
      zoneId:
        description: ZoneId The identity of the zone the user is currently within,
          see note 1.
        type: string
    type: object
  responses.UserInfoList:
    properties:
      resourceURL:
        description: ResourceURL Self-referring URL, see note 1.
        type: string
      user:
        description: User List of users, see note 1.
        items:
          $ref: '#/definitions/responses.UserInfo'
        type: array
    type: object
  responses.ZoneInfo:
    properties:
      numberOfAccessPoints:
        description: The number of access points within the zone
        type: integer
      numberOfUnserviceableAccessPoints:
        description: Number of inoperable access points within the zone.
        type: integer
      numberOfUsers:
        description: The number of users currently on the access point.
        type: integer
      resourceURL:
        description: Self referring URL
        type: string
      zoneId:
        description: Identifier of zone
        type: string
    type: object
  responses.ZoneInfoList:
    properties:
      resourceURL:
        type: string
      zone:
        items:
          $ref: '#/definitions/responses.ZoneInfo'
        type: array
    type: object
  responses.ZoneList:
    properties:
      zoneList:
        $ref: '#/definitions/responses.ZoneInfoList'
    type: object
host: localhost:8080
info:
  contact:
    name: Iulisloi Zacarias
    url: https://github.com/izacarias
  description: The ETSI MEC ISG MEC013 Location API described using OpenAPI
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: ETSI GS MEC 013 - Location API
  version: 3.1.1
paths:
  /mininet/aplocation:
    post:
      consumes:
      - application/json
      description: The POST method is used to update the location of an access point
      operationId: updateMnAPLocationPOST
      parameters:
      - description: Access Point Location Update
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/controllers.mininetApLocationUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Location updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
      summary: Update the location of an access point with data from Mininet
      tags:
      - mininet
  /mininet/location:
    post:
      consumes:
      - application/json
      description: The POST method is used to update the location of a user
      operationId: updateMnUserLocationPOST
      parameters:
      - description: User Location Update
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/controllers.mininetUserLocationUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Location updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
      summary: Update the location of a user with data from Mininet
      tags:
      - mininet
  /queries/distance:
    get:
      description: The GET method is used to query information about distance from
        a user to a location or between two users.
      operationId: distanceGET
      parameters:
      - collectionFormat: csv
        description: User address
        in: query
        items:
          type: string
        name: address
        required: true
        type: array
      - description: Latitude
        in: query
        name: latitude
        type: string
      - description: Longitude
        in: query
        name: longitude
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TerminalDistance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
      summary: Query information about distance from a user to a location or between
        two users
      tags:
      - location
  /queries/users:
    get:
      description: The GET method is used to query location information about a specific
        UE or a group of Ues.
      operationId: usersGET
      parameters:
      - collectionFormat: multi
        description: Zone ID
        in: query
        items:
          type: string
        name: zoneId
        type: array
      - collectionFormat: multi
        description: Access Point ID
        in: query
        items:
          type: string
        name: accessPointId
        type: array
      - collectionFormat: multi
        description: User address
        in: query
        items:
          type: string
        name: address
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserInfoList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "404":
          description: User Not Found
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
      summary: Query location information about a specific UE or a group of UEs
      tags:
      - location
  /queries/zones:
    get:
      description: The GET method is used to query the information about one or more
        specific zones or a list of zones.
      operationId: zonesGET
      parameters:
      - collectionFormat: csv
        description: Zone ID
        in: query
        items:
          type: string
        name: zoneId
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ZoneList'
        "500":
          description: Internal Server Error
      summary: Retrieves information about one or more specific zones or a list of
        zones.
      tags:
      - location
  /queries/zones/{id}/accessPoints:
    get:
      description: The GET method is used to query the information about a specific
        access point or a list of access points under a zone.
      operationId: accessPointsGET
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AccessPointList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "404":
          description: Zone Not Found
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
      summary: Query information about a specific access point or a list of access
        points under a zone
      tags:
      - location
  /queries/zones/{id}/accessPoints/{apId}:
    get:
      description: The GET method is used to query the information about a specific
        access point under a zone.
      operationId: accessPointGetById
      parameters:
      - description: Zone ID
        in: path
        name: id
        required: true
        type: string
      - description: Access Point ID
        in: path
        name: apId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AnAccessPointInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "404":
          description: Access Point Not Found
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ProblemDetails'
      summary: Query information about a specific access point under a zone.
      tags:
      - location
  /queries/zones/{zoneId}:
    get:
      description: The GET method is used to query the information about a specific
        zone.
      operationId: zoneGetById
      parameters:
      - description: Zone ID
        in: path
        name: zoneId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ZoneInfo'
        "400":
          description: Bad Request
        "404":
          description: Not found
        "500":
          description: Internal Server Error
      summary: Query information about a specific zone
      tags:
      - location
schemes:
- http
swagger: "2.0"
